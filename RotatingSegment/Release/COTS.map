Archive member included because of file (symbol)

c:/users/mohamed osama/documents/tools/tools/imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/users/mohamed osama/documents/tools/tools/imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
c:/users/mohamed osama/documents/tools/tools/imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              ./HAL/SSD/SSD_prg.o (__do_copy_data)
c:/users/mohamed osama/documents/tools/tools/imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./APP/main.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/users/mohamed osama/documents/tools/tools/imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./MCAL/DIO/DIO_prg.o
LOAD ./HAL/SWITCH/SWITCH_prg.o
LOAD ./HAL/SSD/SSD_prg.o
LOAD ./HAL/LED/LED_prg.o
LOAD ./HAL/BTN/BTN_prg.o
LOAD ./APP/TwoSevenSegmentsWithOnePort/mainDriver.o
LOAD ./APP/Pattern/SSD_Leds_Pattern.o
LOAD ./APP/main.o
LOAD c:/users/mohamed osama/documents/tools/tools/imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/users/mohamed osama/documents/tools/tools/imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/users/mohamed osama/documents/tools/tools/imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x8e8
 *(.vectors)
 .vectors       0x00000000       0x54 c:/users/mohamed osama/documents/tools/tools/imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/users/mohamed osama/documents/tools/tools/imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/users/mohamed osama/documents/tools/tools/imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 c:/users/mohamed osama/documents/tools/tools/imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 c:/users/mohamed osama/documents/tools/tools/imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 c:/users/mohamed osama/documents/tools/tools/imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 c:/users/mohamed osama/documents/tools/tools/imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x0000008e                __vector_1
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_13
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_9
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_10
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092        0x0 ./MCAL/DIO/DIO_prg.o
 .text          0x00000092        0x0 ./HAL/SWITCH/SWITCH_prg.o
 .text          0x00000092        0x0 ./HAL/SSD/SSD_prg.o
 .text          0x00000092        0x0 ./HAL/LED/LED_prg.o
 .text          0x00000092        0x0 ./HAL/BTN/BTN_prg.o
 .text          0x00000092        0x0 ./APP/TwoSevenSegmentsWithOnePort/mainDriver.o
 .text          0x00000092        0x0 ./APP/Pattern/SSD_Leds_Pattern.o
 .text          0x00000092        0x0 ./APP/main.o
 .text          0x00000092        0x0 c:/users/mohamed osama/documents/tools/tools/imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000092        0x0 c:/users/mohamed osama/documents/tools/tools/imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000092        0x0 c:/users/mohamed osama/documents/tools/tools/imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000092                . = ALIGN (0x2)
 *(.text.*)
 .text.DIO_vSetPinDir
                0x00000092       0xbc ./MCAL/DIO/DIO_prg.o
                0x00000092                DIO_vSetPinDir
 .text.DIO_vSetPinVal
                0x0000014e       0xbc ./MCAL/DIO/DIO_prg.o
                0x0000014e                DIO_vSetPinVal
 .text.DIO_u8GetPinVal
                0x0000020a       0x3e ./MCAL/DIO/DIO_prg.o
                0x0000020a                DIO_u8GetPinVal
 .text.DIO_vSetPortDir
                0x00000248       0x54 ./MCAL/DIO/DIO_prg.o
                0x00000248                DIO_vSetPortDir
 .text.DIO_vSetPortVal
                0x0000029c       0x22 ./MCAL/DIO/DIO_prg.o
                0x0000029c                DIO_vSetPortVal
 .text.DIO_vTogglePinVal
                0x000002be        0x2 ./MCAL/DIO/DIO_prg.o
                0x000002be                DIO_vTogglePinVal
 .text.DIO_u8GetPortVal
                0x000002c0       0x22 ./MCAL/DIO/DIO_prg.o
                0x000002c0                DIO_u8GetPortVal
 .text.SWITCH_u8GetState
                0x000002e2       0x2e ./HAL/SWITCH/SWITCH_prg.o
                0x000002e2                SWITCH_u8GetState
 .text.SWITCH_vInitAll
                0x00000310       0x3e ./HAL/SWITCH/SWITCH_prg.o
                0x00000310                SWITCH_vInitAll
 .text.SWITCH_vInit
                0x0000034e       0x5e ./HAL/SWITCH/SWITCH_prg.o
                0x0000034e                SWITCH_vInit
 .text.SSD_vDisplayNum
                0x000003ac       0x2e ./HAL/SSD/SSD_prg.o
                0x000003ac                SSD_vDisplayNum
 .text.SSD_vTurnOff
                0x000003da       0x22 ./HAL/SSD/SSD_prg.o
                0x000003da                SSD_vTurnOff
 .text.SSD_vTurnOn
                0x000003fc       0x22 ./HAL/SSD/SSD_prg.o
                0x000003fc                SSD_vTurnOn
 .text.SSD_vInitBoth
                0x0000041e       0x26 ./HAL/SSD/SSD_prg.o
                0x0000041e                SSD_vInitBoth
 .text.SSD_vInit
                0x00000444       0x3e ./HAL/SSD/SSD_prg.o
                0x00000444                SSD_vInit
 .text.LED_vTurnOff
                0x00000482       0x60 ./HAL/LED/LED_prg.o
                0x00000482                LED_vTurnOff
 .text.LED_vTurnAllOff
                0x000004e2       0x32 ./HAL/LED/LED_prg.o
                0x000004e2                LED_vTurnAllOff
 .text.LED_vTurnOn
                0x00000514       0x60 ./HAL/LED/LED_prg.o
                0x00000514                LED_vTurnOn
 .text.LED_vTurnAllOn
                0x00000574       0x32 ./HAL/LED/LED_prg.o
                0x00000574                LED_vTurnAllOn
 .text.LED_vInit
                0x000005a6       0x60 ./HAL/LED/LED_prg.o
                0x000005a6                LED_vInit
 .text.BTN_u8GetState
                0x00000606       0x62 ./HAL/BTN/BTN_prg.o
                0x00000606                BTN_u8GetState
 .text.BTN_vInit
                0x00000668       0xe4 ./HAL/BTN/BTN_prg.o
                0x00000668                BTN_vInit
 .text.SSD_vDisplayPattern
                0x0000074c       0x2e ./APP/Pattern/SSD_Leds_Pattern.o
                0x0000074c                SSD_vDisplayPattern
 .text.main     0x0000077a      0x16a ./APP/main.o
                0x0000077a                main
 .text.libgcc   0x000008e4        0x0 c:/users/mohamed osama/documents/tools/tools/imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x000008e4        0x0 c:/users/mohamed osama/documents/tools/tools/imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x000008e4        0x0 c:/users/mohamed osama/documents/tools/tools/imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x000008e4                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000008e4        0x0 c:/users/mohamed osama/documents/tools/tools/imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x000008e4                exit
                0x000008e4                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000008e4        0x4 c:/users/mohamed osama/documents/tools/tools/imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000008e8                _etext = .

.data           0x00800060       0x12 load address 0x000008e8
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/users/mohamed osama/documents/tools/tools/imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./MCAL/DIO/DIO_prg.o
 .data          0x00800060        0x0 ./HAL/SWITCH/SWITCH_prg.o
 .data          0x00800060        0x0 ./HAL/SSD/SSD_prg.o
 .data          0x00800060        0x0 ./HAL/LED/LED_prg.o
 .data          0x00800060        0x0 ./HAL/BTN/BTN_prg.o
 .data          0x00800060        0x0 ./APP/TwoSevenSegmentsWithOnePort/mainDriver.o
 .data          0x00800060        0x0 ./APP/Pattern/SSD_Leds_Pattern.o
 .data          0x00800060        0x0 ./APP/main.o
 .data          0x00800060        0x0 c:/users/mohamed osama/documents/tools/tools/imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/users/mohamed osama/documents/tools/tools/imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 c:/users/mohamed osama/documents/tools/tools/imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.L_u8SsdDecToSegArr.1248
                0x00800060        0xa ./HAL/SSD/SSD_prg.o
 .rodata.L_u8SsdPatternArr.1222
                0x0080006a        0x8 ./APP/Pattern/SSD_Leds_Pattern.o
 *(.gnu.linkonce.d*)
                0x00800072                . = ALIGN (0x2)
                0x00800072                _edata = .
                0x00800072                PROVIDE (__data_end, .)

.bss            0x00800072        0x1
                0x00800072                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800072        0x0 c:/users/mohamed osama/documents/tools/tools/imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x00800072        0x0 ./MCAL/DIO/DIO_prg.o
 .bss           0x00800072        0x0 ./HAL/SWITCH/SWITCH_prg.o
 .bss           0x00800072        0x0 ./HAL/SSD/SSD_prg.o
 .bss           0x00800072        0x0 ./HAL/LED/LED_prg.o
 .bss           0x00800072        0x0 ./HAL/BTN/BTN_prg.o
 .bss           0x00800072        0x0 ./APP/TwoSevenSegmentsWithOnePort/mainDriver.o
 .bss           0x00800072        0x0 ./APP/Pattern/SSD_Leds_Pattern.o
 .bss           0x00800072        0x0 ./APP/main.o
 .bss           0x00800072        0x0 c:/users/mohamed osama/documents/tools/tools/imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800072        0x0 c:/users/mohamed osama/documents/tools/tools/imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x00800072        0x0 c:/users/mohamed osama/documents/tools/tools/imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.stopBit   0x00800072        0x1 ./APP/main.o
                0x00800072                stopBit
 *(COMMON)
                0x00800073                PROVIDE (__bss_end, .)
                0x000008e8                __data_load_start = LOADADDR (.data)
                0x000008fa                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800073        0x0
                0x00800073                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800073                PROVIDE (__noinit_end, .)
                0x00800073                _end = .
                0x00800073                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(COTS.elf elf32-avr)
LOAD linker stubs
